{"version":3,"sources":["appStyles.js","common/PopupStyles.js","redux/actions/toDos.js","components/EditToDoPopup/EditToDoPopup.jsx","redux/actionCreators/toDos.js","components/NewToDoPopup/NewToDoPopup.jsx","components/ToDo/Checkbox/Styles.js","components/ToDo/Checkbox/Checkbox.jsx","components/ToDo/DeleteButton/Styles.js","components/ToDo/DeleteButton/DeleteButton.jsx","components/ToDo/Styles.js","components/ToDo/ToDo.jsx","components/ToDos/Styles.js","components/ToDos/ToDos.jsx","assets/plus.svg","App.js","fonts/Gilroy-Medium.eot","fonts/Gilroy-Medium.ttf","fonts/Gilroy-Medium.woff","fonts/Gilroy-Extrabold.eot","fonts/Gilroy-Extrabold.ttf","fonts/Gilroy-Extrabold.woff","globalStyles.js","redux/reducers/toDos.js","redux/store.js","index.js"],"names":["Wrapper","styled","div","Content","Header","header","Title","h1","NoToDosTitle","h2","Button","button","AddButton","props","background","PopupWrapper","Buttons","add","TextArea","textarea","height","edit","ErrorMessage","p","actions","SET_TODO","SET_DONE_TODO","REMOVE_TODO_FROM_DONES","DELETE_TODO","EDIT_TODO_TITLE","EditToDoPopup","prevTitle","id","closePopup","useState","newTitle","setNewTitle","errorMessageVisible","setErrorMessageVisible","textAreaRef","useRef","dispatch","useDispatch","onSaveClickHandler","type","payload","editToDoTitle","onChange","current","value","defaultValue","ref","close","onClick","NewToDoPopup","onCloseClick","onAddClick","newToDoId","title","newToDo","setNewToDo","placeholder","CheckboxWrapper","CheckboxDone","Checkbox","isDone","DeleteButtonWrapper","Minus","DeleteButton","onDeleteClick","ToDoItem","li","ToDo","editMode","onTitleClickEditMode","onToDoClickHandler","setDoneToDo","onDeleteClickHandler","onTitleClickHandler","ToDosList","ul","ToDos","toDos","doneToDos","useSelector","state","map","toDo","find","doneToDo","App","lastToDoId","length","editToDoPopupVisible","setEditToDoPopupVisible","newToDoPopupVisible","setNewToDoPopupVisible","setEditMode","editToDo","setEditToDo","plus","GlobalStyles","createGlobalStyle","GilroyMediumEot","GilroyMediumWoff","GilroyMediumTtf","GilroyExtraboldEot","GilroyExtraboldWoff","GilroyExtraboldTtf","initialState","filter","console","log","reducers","combineReducers","store","createStore","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fe7ccb8.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n  background-color: #ffffff;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const Content = styled.div`\r\n  padding: 60px 40px 40px 40px;\r\n  max-width: 768px;\r\n  margin: 0 auto;\r\n  min-height: 100vh;\r\n`\r\n\r\nexport const Header = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 48px;\r\n`\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 28px;\r\n  font-weight: 800;\r\n`\r\nexport const NoToDosTitle = styled.h2`\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n`\r\n\r\nexport const Button = styled.button`\r\n  width: 86px;\r\n  height: 27px;\r\n  background-color: #f2f2f2;\r\n  border-radius: 4px;\r\n  border: none;\r\n  outline: none;\r\n`\r\nexport const AddButton = styled.button`\r\n  position: fixed;\r\n  bottom: 40px;\r\n  right: 40px;\r\n  width: 60px;\r\n  height: 60px;\r\n  border: none;\r\n  outline: none;\r\n  box-shadow: 0px 10px 40px rgba(0, 0, 0, 0.1);\r\n  border-radius: 50%;\r\n  background: url(${(props) => props.background}) center no-repeat;\r\n  background-color: #ffffff;\r\n  cursor: pointer;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const PopupWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 83vh;\r\n  padding: 40px;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 999;\r\n  box-shadow: 0px 0px 40px rgba(0, 0, 0, 0.1);\r\n  border-radius: 40px 40px 0px 0px;\r\n  background-color: #ffffff;\r\n  animation: 0.5s slidein forwards;\r\n  @keyframes slidein {\r\n    0% {\r\n      bottom: -100vh;\r\n    }\r\n    100% {\r\n      bottom: 0;\r\n    }\r\n  }\r\n`\r\nexport const Buttons = styled.div`\r\n  margin-top: 39px;\r\n  display: flex;\r\n`\r\n\r\nexport const Button = styled.button`\r\n  width: 137px;\r\n  height: 40px;\r\n  background-color: ${(props) => (props.add ? '#23A3FF' : '#F2F2F2')};\r\n  color: ${(props) => (props.add ? '#ffffff' : '#4D4D4D')};\r\n  border-radius: 10px;\r\n  font-size: 16px;\r\n  border: none;\r\n  outline: none;\r\n  &:first-child {\r\n    margin-right: 21px;\r\n  }\r\n`\r\nexport const TextArea = styled.textarea`\r\n  width: 295px;\r\n  height: ${(props) => props.height}px;\r\n  padding: ${(props) => (props.edit ? '12px' : '20px')} 20px;\r\n  border: 2px solid #e6e6e6;\r\n  border-radius: 10px;\r\n  font-size: 16px;\r\n  outline: none;\r\n  resize: none;\r\n  color: #333333;\r\n  &::placeholder {\r\n    color: #999999;\r\n  }\r\n  box-sizing: border-box;\r\n`\r\nexport const ErrorMessage = styled.p`\r\n  line-height: 22px;\r\n  color: #e85c5c;\r\n  font-size: 14px;\r\n`\r\n","const actions = {\r\n  SET_TODO: 'SET_TODO',\r\n  SET_DONE_TODO: 'SET_DONE_TODO',\r\n  REMOVE_TODO_FROM_DONES: 'REMOVE_TODO_FROM_DONES',\r\n  DELETE_TODO: 'DELETE_TODO',\r\n  EDIT_TODO_TITLE: 'EDIT_TODO_TITLE',\r\n}\r\n\r\nexport default actions\r\n","import { useRef } from 'react'\r\nimport { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  Button,\r\n  Buttons,\r\n  ErrorMessage,\r\n  PopupWrapper,\r\n  TextArea,\r\n} from '../../common/PopupStyles'\r\nimport { editToDoTitle } from '../../redux/actionCreators/toDos'\r\n\r\nconst EditToDoPopup = ({ prevTitle, id, closePopup }) => {\r\n  const [newTitle, setNewTitle] = useState(prevTitle)\r\n\r\n  const [errorMessageVisible, setErrorMessageVisible] = useState(false)\r\n\r\n  const textAreaRef = useRef()\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onSaveClickHandler = (id, newTitle) => {\r\n    if (newTitle !== '') {\r\n      closePopup()\r\n      dispatch(editToDoTitle({ id, newTitle }))\r\n    } else {\r\n      setErrorMessageVisible(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PopupWrapper>\r\n      <TextArea\r\n        height={50}\r\n        onChange={() => setNewTitle(textAreaRef.current.value)}\r\n        defaultValue={prevTitle}\r\n        ref={textAreaRef}\r\n        edit></TextArea>\r\n      {errorMessageVisible ? (\r\n        <ErrorMessage>Переименуйте задачу</ErrorMessage>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <Buttons>\r\n        <Button close onClick={closePopup}>\r\n          Закрыть\r\n        </Button>\r\n        <Button add onClick={() => onSaveClickHandler(id, newTitle)}>\r\n          Сохранить\r\n        </Button>\r\n      </Buttons>\r\n    </PopupWrapper>\r\n  )\r\n}\r\n\r\nexport default EditToDoPopup\r\n","import actions from '../actions/toDos'\r\n\r\nexport const setToDo = (payload) => ({\r\n  type: actions.SET_TODO,\r\n  payload,\r\n})\r\n\r\nexport const setDoneToDo = (payload) => ({\r\n  type: actions.SET_DONE_TODO,\r\n  payload,\r\n})\r\n\r\nexport const removeToDoFromDones = (payload) => ({\r\n  type: actions.REMOVE_TODO_FROM_DONES,\r\n  payload,\r\n})\r\n\r\nexport const deleteToDo = (payload) => ({\r\n  type: actions.DELETE_TODO,\r\n  payload,\r\n})\r\n\r\nexport const editToDoTitle = ({ id, newTitle }) => ({\r\n  type: actions.EDIT_TODO_TITLE,\r\n  payload: {\r\n    id,\r\n    newTitle,\r\n  },\r\n})\r\n","import { useRef } from 'react'\r\nimport { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  Button,\r\n  Buttons,\r\n  ErrorMessage,\r\n  PopupWrapper,\r\n  TextArea,\r\n} from '../../common/PopupStyles'\r\nimport { setToDo } from '../../redux/actionCreators/toDos'\r\n\r\nconst NewToDoPopup = ({ onCloseClick, onAddClick, newToDoId }) => {\r\n  const [newToDo, setNewToDo] = useState({\r\n    id: 0,\r\n    title: '',\r\n  })\r\n\r\n  const [errorMessageVisible, setErrorMessageVisible] = useState(false)\r\n\r\n  const textAreaRef = useRef()\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onChangeHandler = () => {\r\n    setNewToDo({\r\n      id: newToDoId,\r\n      title: textAreaRef.current.value,\r\n    })\r\n    setErrorMessageVisible(false)\r\n  }\r\n\r\n  const onButtonClickHandler = () => {\r\n    if (newToDo.title !== '') {\r\n      onAddClick()\r\n      dispatch(setToDo(newToDo))\r\n    } else {\r\n      setErrorMessageVisible(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PopupWrapper>\r\n      <TextArea\r\n        height={160}\r\n        placeholder='Введите текст задачи'\r\n        onChange={onChangeHandler}\r\n        value={newToDo.title}\r\n        ref={textAreaRef}></TextArea>\r\n      {errorMessageVisible ? <ErrorMessage>Введите задачу</ErrorMessage> : ''}\r\n      <Buttons>\r\n        <Button close onClick={onCloseClick}>\r\n          Закрыть\r\n        </Button>\r\n        <Button add onClick={onButtonClickHandler}>\r\n          Добавить\r\n        </Button>\r\n      </Buttons>\r\n    </PopupWrapper>\r\n  )\r\n}\r\n\r\nexport default NewToDoPopup\r\n","import styled from 'styled-components'\r\n\r\nexport const CheckboxWrapper = styled.div`\r\n  height: 22px;\r\n  width: 22px;\r\n  border: 2px solid #d9d9d9;\r\n  margin-right: 14px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 0 0 auto;\r\n`\r\nexport const CheckboxDone = styled.div`\r\n  width: 12px;\r\n  height: 12px;\r\n  background-color: #23a3ff;\r\n  border-radius: 50%;\r\n`\r\n","import { CheckboxDone, CheckboxWrapper } from './Styles'\r\n\r\nconst Checkbox = ({ isDone }) => {\r\n  return <CheckboxWrapper>{isDone ? <CheckboxDone /> : ''}</CheckboxWrapper>\r\n}\r\n\r\nexport default Checkbox\r\n","import styled from 'styled-components'\r\n\r\nexport const DeleteButtonWrapper = styled.div`\r\n  height: 22px;\r\n  width: 22px;\r\n  background-color: #e85c5c;\r\n  margin-right: 14px;\r\n  border-radius: 50%;\r\n  flex: 0 0 auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\nexport const Minus = styled.div`\r\n  width: 10px;\r\n  height: 2px;\r\n  background-color: #fff;\r\n`","import { DeleteButtonWrapper, Minus } from './Styles'\r\n\r\nconst DeleteButton = ({ onDeleteClick }) => {\r\n  return (\r\n    <DeleteButtonWrapper onClick={onDeleteClick}>\r\n      <Minus />\r\n    </DeleteButtonWrapper>\r\n  )\r\n}\r\n\r\nexport default DeleteButton\r\n","import styled from 'styled-components'\r\n\r\nexport const ToDoItem = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 31px;\r\n  cursor: pointer;\r\n`\r\n\r\nexport const Title = styled.h2`\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  color: ${(props) => (props.isDone ? '#666666' : '#000000')};\r\n  transition: 0.3s ease color;\r\n  max-width: 768px;\r\n`\r\n","import { useDispatch } from 'react-redux'\r\nimport {\r\n  deleteToDo,\r\n  removeToDoFromDones,\r\n  setDoneToDo,\r\n} from '../../redux/actionCreators/toDos'\r\nimport Checkbox from './Checkbox/Checkbox'\r\nimport DeleteButton from './DeleteButton/DeleteButton'\r\nimport { ToDoItem, Title } from './Styles'\r\n\r\nconst ToDo = ({ title, id, isDone, editMode, onTitleClickEditMode }) => {\r\n  const dispatch = useDispatch()\r\n  const onToDoClickHandler = (id) => {\r\n    if (!editMode) {\r\n      isDone ? dispatch(removeToDoFromDones(id)) : dispatch(setDoneToDo(id))\r\n    }\r\n  }\r\n\r\n  const onDeleteClickHandler = (id) => {\r\n    dispatch(deleteToDo(id))\r\n  }\r\n\r\n  const onTitleClickHandler = (id, title) => {\r\n    if (editMode) {\r\n      onTitleClickEditMode(id, title)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ToDoItem\r\n      onClick={() => {\r\n        onToDoClickHandler(id)\r\n      }}>\r\n      {editMode ? (\r\n        <DeleteButton onDeleteClick={() => onDeleteClickHandler(id)} />\r\n      ) : (\r\n        <Checkbox isDone={isDone} />\r\n      )}\r\n      <Title isDone={isDone} onClick={() => onTitleClickHandler(id, title)}>\r\n        {title}\r\n      </Title>\r\n    </ToDoItem>\r\n  )\r\n}\r\n\r\nexport default ToDo\r\n","import styled from 'styled-components'\r\n\r\nexport const ToDosList = styled.ul`\r\n  margin: 0px;\r\n  list-style: none;\r\n`\r\n","import { useSelector } from 'react-redux'\r\nimport ToDo from '../ToDo/ToDo'\r\nimport { ToDosList } from './Styles'\r\n\r\nconst ToDos = ({ toDos, editMode, onTitleClickEditMode }) => {\r\n  const doneToDos = useSelector((state) => state.toDos.doneToDos)\r\n\r\n  return (\r\n    <ToDosList>\r\n      {toDos.map((toDo) => (\r\n        <ToDo\r\n          title={toDo.title}\r\n          id={toDo.id}\r\n          key={toDo.id}\r\n          isDone={\r\n            doneToDos.find((doneToDo) => doneToDo === toDo.id) === toDo.id\r\n          }\r\n          editMode={editMode}\r\n          onTitleClickEditMode={onTitleClickEditMode}\r\n        />\r\n      ))}\r\n    </ToDosList>\r\n  )\r\n}\r\n\r\nexport default ToDos\r\n","export default __webpack_public_path__ + \"static/media/plus.284a8f06.svg\";","import { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport {\n  Wrapper,\n  Button,\n  Header,\n  Content,\n  Title,\n  AddButton,\n  NoToDosTitle,\n} from './appStyles'\n\nimport EditToDoPopup from './components/EditToDoPopup/EditToDoPopup'\nimport NewToDoPopup from './components/NewToDoPopup/NewToDoPopup'\nimport ToDos from './components/ToDos/ToDos'\n\nimport plus from './assets/plus.svg'\n\nconst App = () => {\n  const toDos = useSelector((state) => state.toDos.toDos)\n\n  const lastToDoId = toDos.length - 1\n\n  const [editToDoPopupVisible, setEditToDoPopupVisible] = useState(false)\n  const [newToDoPopupVisible, setNewToDoPopupVisible] = useState(false)\n  const [editMode, setEditMode] = useState(false)\n  const [editToDo, setEditToDo] = useState({})\n\n  const onCloseClickHandler = () => {\n    setNewToDoPopupVisible(false)\n  }\n\n  const onAddClickHandler = () => {\n    setNewToDoPopupVisible(false)\n  }\n\n  const onButtonClickHandler = () => {\n    setEditMode(!editMode)\n  }\n\n  const onTitleClickEditMode = (id, title) => {\n    setEditToDoPopupVisible(true)\n    setEditToDo({\n      title,\n      id,\n    })\n  }\n\n  return (\n    <Wrapper>\n      <Content>\n        <Header>\n          <Title>Сегодня</Title>\n          <Button onClick={onButtonClickHandler}>\n            {editMode ? 'Отменить' : 'Править'}\n          </Button>\n        </Header>\n        {toDos.length > 0 ? (\n          <ToDos\n            toDos={toDos}\n            editMode={editMode}\n            onTitleClickEditMode={onTitleClickEditMode}\n          />\n        ) : (\n          <NoToDosTitle>Список задач пуст</NoToDosTitle>\n        )}\n        {newToDoPopupVisible ? (\n          <NewToDoPopup\n            onCloseClick={onCloseClickHandler}\n            onAddClick={onAddClickHandler}\n            newToDoId={lastToDoId + 1}\n          />\n        ) : (\n          ''\n        )}\n        {editToDoPopupVisible ? (\n          <EditToDoPopup\n            prevTitle={editToDo.title}\n            id={editToDo.id}\n            closePopup={() => setEditToDoPopupVisible(false)}\n          />\n        ) : (\n          ''\n        )}\n        {editMode ? (\n          ''\n        ) : (\n          <AddButton\n            background={plus}\n            onClick={() => setNewToDoPopupVisible(true)}\n          />\n        )}\n      </Content>\n    </Wrapper>\n  )\n}\n\nexport default App\n","export default __webpack_public_path__ + \"static/media/Gilroy-Medium.2fea647f.eot\";","export default __webpack_public_path__ + \"static/media/Gilroy-Medium.1c23f810.ttf\";","export default __webpack_public_path__ + \"static/media/Gilroy-Medium.85207afd.woff\";","export default __webpack_public_path__ + \"static/media/Gilroy-Extrabold.35fe3e3e.eot\";","export default __webpack_public_path__ + \"static/media/Gilroy-Extrabold.92e435f7.ttf\";","export default __webpack_public_path__ + \"static/media/Gilroy-Extrabold.2f14e13e.woff\";","import { createGlobalStyle } from 'styled-components'\r\n\r\nimport GilroyMediumEot from './fonts/Gilroy-Medium.eot'\r\nimport GilroyMediumTtf from './fonts/Gilroy-Medium.ttf'\r\nimport GilroyMediumWoff from './fonts/Gilroy-Medium.woff'\r\n\r\nimport GilroyExtraboldEot from './fonts/Gilroy-Extrabold.eot'\r\nimport GilroyExtraboldTtf from './fonts/Gilroy-Extrabold.ttf'\r\nimport GilroyExtraboldWoff from './fonts/Gilroy-Extrabold.woff'\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  @font-face {\r\n    font-family: 'Gilroy';\r\n    src: url(${GilroyMediumEot});\r\n    src: local('Gilroy'), url(${GilroyMediumWoff}) format('woff'), url(${GilroyMediumTtf}) format('truetype');\r\n    font-weight: 500;\r\n    font-style: normal;\r\n  }\r\n\r\n  @font-face {\r\n    font-family: 'Gilroy';\r\n    src: url(${GilroyExtraboldEot});\r\n    src: local('Gilroy'), url(${GilroyExtraboldWoff}) format('woff'), url(${GilroyExtraboldTtf}) format('truetype');\r\n    font-weight: 800;\r\n    font-style: normal;\r\n  }\r\n\r\n  body {\r\n    font-family: \"Gilroy\";\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n  }\r\n\r\n  button, input, textarea {\r\n    font-family: \"Gilroy\";\r\n  }\r\n\r\n  * {\r\n    margin: 0px;\r\n    padding: 0px;\r\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n  }\r\n\r\n  div {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n`\r\nexport default GlobalStyles\r\n","import actions from '../actions/toDos'\r\n\r\nconst initialState = {\r\n  toDos: [],\r\n  doneToDos: [],\r\n}\r\n\r\nconst toDos = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case actions.SET_TODO:\r\n      return {\r\n        ...state,\r\n        toDos: [...state.toDos, payload],\r\n      }\r\n    case actions.SET_DONE_TODO:\r\n      return {\r\n        ...state,\r\n        doneToDos: [...state.doneToDos, payload],\r\n      }\r\n\r\n    case actions.REMOVE_TODO_FROM_DONES:\r\n      return {\r\n        ...state,\r\n        doneToDos: state.doneToDos.filter((toDo) => toDo !== payload),\r\n      }\r\n    case actions.DELETE_TODO:\r\n      return {\r\n        ...state,\r\n        toDos: state.toDos.filter((toDo) => toDo.id !== payload),\r\n        doneToDos: state.doneToDos.filter((toDo) => toDo !== payload),\r\n      }\r\n    case actions.EDIT_TODO_TITLE:\r\n      console.log(payload)\r\n      return {\r\n        ...state,\r\n        toDos: state.toDos.map((toDo) =>\r\n          toDo.id === payload.id\r\n            ? { id: toDo.id, title: payload.newTitle }\r\n            : toDo\r\n        ),\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default toDos\r\n","import { combineReducers, createStore } from 'redux'\r\nimport toDos from './reducers/toDos'\r\n\r\nconst reducers = combineReducers({\r\n  toDos,\r\n})\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store\r\n\r\nwindow.store = store\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport GlobalStyles from './globalStyles'\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <GlobalStyles />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}